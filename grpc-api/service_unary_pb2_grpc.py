# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import service_unary_pb2 as service__unary__pb2


class SpotifyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUser = channel.unary_unary(
                '/Spotify/GetUser',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.GetUserResponse.FromString,
                )
        self.GetAllUsers = channel.unary_unary(
                '/Spotify/GetAllUsers',
                request_serializer=service__unary__pb2.Empty.SerializeToString,
                response_deserializer=service__unary__pb2.GetAllUsersResponse.FromString,
                )
        self.GetUserPlaylists = channel.unary_unary(
                '/Spotify/GetUserPlaylists',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.GetUserPlaylistsResponse.FromString,
                )
        self.AddUser = channel.unary_unary(
                '/Spotify/AddUser',
                request_serializer=service__unary__pb2.AddUserRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/Spotify/UpdateUser',
                request_serializer=service__unary__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/Spotify/DeleteUser',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.GetPlaylist = channel.unary_unary(
                '/Spotify/GetPlaylist',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.GetPlaylistResponse.FromString,
                )
        self.GetAllPlaylists = channel.unary_unary(
                '/Spotify/GetAllPlaylists',
                request_serializer=service__unary__pb2.Empty.SerializeToString,
                response_deserializer=service__unary__pb2.GetAllPlaylistsResponse.FromString,
                )
        self.GetPlaylistMusics = channel.unary_unary(
                '/Spotify/GetPlaylistMusics',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.GetPlaylistMusicsResponse.FromString,
                )
        self.GetAllPlaylistsWithMusic = channel.unary_unary(
                '/Spotify/GetAllPlaylistsWithMusic',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.GetAllPlaylistsWithMusicResponse.FromString,
                )
        self.AddPlaylist = channel.unary_unary(
                '/Spotify/AddPlaylist',
                request_serializer=service__unary__pb2.AddPlaylistRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.AddPlaylistMusic = channel.unary_unary(
                '/Spotify/AddPlaylistMusic',
                request_serializer=service__unary__pb2.AddPlaylistMusicRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.UpdatePlaylist = channel.unary_unary(
                '/Spotify/UpdatePlaylist',
                request_serializer=service__unary__pb2.UpdatePlaylistRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.DeletePlaylist = channel.unary_unary(
                '/Spotify/DeletePlaylist',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.DeletePlaylistMusic = channel.unary_unary(
                '/Spotify/DeletePlaylistMusic',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.GetMusic = channel.unary_unary(
                '/Spotify/GetMusic',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.GetMusicResponse.FromString,
                )
        self.GetAllMusics = channel.unary_unary(
                '/Spotify/GetAllMusics',
                request_serializer=service__unary__pb2.Empty.SerializeToString,
                response_deserializer=service__unary__pb2.GetAllMusicsResponse.FromString,
                )
        self.AddMusic = channel.unary_unary(
                '/Spotify/AddMusic',
                request_serializer=service__unary__pb2.AddMusicRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.UpdateMusic = channel.unary_unary(
                '/Spotify/UpdateMusic',
                request_serializer=service__unary__pb2.UpdateMusicRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )
        self.DeleteMusic = channel.unary_unary(
                '/Spotify/DeleteMusic',
                request_serializer=service__unary__pb2.IdGenericRequest.SerializeToString,
                response_deserializer=service__unary__pb2.IdGenericResponse.FromString,
                )


class SpotifyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPlaylists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllPlaylists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylistMusics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllPlaylistsWithMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlaylistMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlaylistMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllMusics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpotifyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.GetUserResponse.SerializeToString,
            ),
            'GetAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUsers,
                    request_deserializer=service__unary__pb2.Empty.FromString,
                    response_serializer=service__unary__pb2.GetAllUsersResponse.SerializeToString,
            ),
            'GetUserPlaylists': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPlaylists,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.GetUserPlaylistsResponse.SerializeToString,
            ),
            'AddUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUser,
                    request_deserializer=service__unary__pb2.AddUserRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=service__unary__pb2.UpdateUserRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'GetPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylist,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.GetPlaylistResponse.SerializeToString,
            ),
            'GetAllPlaylists': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllPlaylists,
                    request_deserializer=service__unary__pb2.Empty.FromString,
                    response_serializer=service__unary__pb2.GetAllPlaylistsResponse.SerializeToString,
            ),
            'GetPlaylistMusics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylistMusics,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.GetPlaylistMusicsResponse.SerializeToString,
            ),
            'GetAllPlaylistsWithMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllPlaylistsWithMusic,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.GetAllPlaylistsWithMusicResponse.SerializeToString,
            ),
            'AddPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlaylist,
                    request_deserializer=service__unary__pb2.AddPlaylistRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'AddPlaylistMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlaylistMusic,
                    request_deserializer=service__unary__pb2.AddPlaylistMusicRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'UpdatePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlaylist,
                    request_deserializer=service__unary__pb2.UpdatePlaylistRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'DeletePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlaylist,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'DeletePlaylistMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlaylistMusic,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'GetMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMusic,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.GetMusicResponse.SerializeToString,
            ),
            'GetAllMusics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllMusics,
                    request_deserializer=service__unary__pb2.Empty.FromString,
                    response_serializer=service__unary__pb2.GetAllMusicsResponse.SerializeToString,
            ),
            'AddMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMusic,
                    request_deserializer=service__unary__pb2.AddMusicRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'UpdateMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMusic,
                    request_deserializer=service__unary__pb2.UpdateMusicRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
            'DeleteMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMusic,
                    request_deserializer=service__unary__pb2.IdGenericRequest.FromString,
                    response_serializer=service__unary__pb2.IdGenericResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spotify', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Spotify(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetUser',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.GetUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetAllUsers',
            service__unary__pb2.Empty.SerializeToString,
            service__unary__pb2.GetAllUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPlaylists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetUserPlaylists',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.GetUserPlaylistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/AddUser',
            service__unary__pb2.AddUserRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/UpdateUser',
            service__unary__pb2.UpdateUserRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/DeleteUser',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetPlaylist',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.GetPlaylistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllPlaylists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetAllPlaylists',
            service__unary__pb2.Empty.SerializeToString,
            service__unary__pb2.GetAllPlaylistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlaylistMusics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetPlaylistMusics',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.GetPlaylistMusicsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllPlaylistsWithMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetAllPlaylistsWithMusic',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.GetAllPlaylistsWithMusicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/AddPlaylist',
            service__unary__pb2.AddPlaylistRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPlaylistMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/AddPlaylistMusic',
            service__unary__pb2.AddPlaylistMusicRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/UpdatePlaylist',
            service__unary__pb2.UpdatePlaylistRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/DeletePlaylist',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePlaylistMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/DeletePlaylistMusic',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetMusic',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.GetMusicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllMusics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetAllMusics',
            service__unary__pb2.Empty.SerializeToString,
            service__unary__pb2.GetAllMusicsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/AddMusic',
            service__unary__pb2.AddMusicRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/UpdateMusic',
            service__unary__pb2.UpdateMusicRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/DeleteMusic',
            service__unary__pb2.IdGenericRequest.SerializeToString,
            service__unary__pb2.IdGenericResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
